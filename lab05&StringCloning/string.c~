#include <ctype.h>
#include "string.h"
#include <stdio.h>




void to_upper(char *s)
{
// convert all characters in a string s
// into upper case
  while (*s){
    toupper(s);
  }
}


int vowel_count(const char *s)
{
// returns the number of vowels in a string
// skip white space
  while (*s == ' ' || *s == '\t' || *s == '\n') {
    s++;
  }
  //counting vowels with v
  int v = 0;
  // read until reaching end of string or white space
  while (*s != '\0' && *s != ' ' && *s != '\t' && *s != '\n') {
    // (a,e,i,o,u,A,E,I,O,U are vowels)
    if(*s =='a' || *s=='e' || *s=='i' || *s=='o' || *s =='u' || *s =='A' || *s =='E' || *s =='I' || *s =='O' || *s =='U')
      ++v;
    s++;
  }
  // number of vowels in word
  return (v);
}




bool empty(const char *s)        // returns true if and only if a string is empty
{
  //checks if fist char is "\0" returns True/False
  if (*s == "\0"){
    return(true);
  }
  else{
    return(false);
  }
}
void print_os()
{
// prints the operating system the application
// is compiled for:
// - if macro UNIX is defined, print UNIX to standard output (screen),
// - else if macro WINDOWS is defined, print WINDOWS,
// - otherwise, print UNKNOWN
// Hint: Course Notes Part 4 Page 8
#ifdef WINDOWS
  printf("WINDOWS");
#else
#ifdef UNIX
  printf("UNIX");
  
#else
  printf("UNKNOWN");
#endif
#endif
}
